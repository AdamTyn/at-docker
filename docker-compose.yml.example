version: '3'
services:

  ### Nginx container #########################################

  nginx:
      image: nginx:alpine
      ports:
        - "${HTTP_PORT}:80"
        - "${HTTPS_PORT}:443"
      volumes:
        - ${PROJECT_FOLDER}:/var/www/html:rw
        - ./components/nginx/config/nginx.conf:/etc/nginx/nginx.conf:ro
        - ./components/nginx/config/conf.d:/etc/nginx/conf.d:ro
        - ./components/nginx/log:/var/log/nginx:rw
      restart: always
      privileged: true
      networks:
        - diy-network

  ### PHP container #########################################

  php:
      build:
        context: ./build/php
        args:
          TIME_ZONE: ${GLOBAL_TIME_ZONE}
          CHANGE_SOURCE: ${GLOBAL_CHANGE_SOURCE}
      volumes:
        - ${PROJECT_FOLDER}:/var/www/html:rw
        - ./components/php/config/php.ini:/usr/local/etc/php/php.ini:ro
        - ./components/php/config/php-fpm.conf:/usr/local/etc/php-fpm.d/www.conf:rw
        - ./components/php/log:/var/log:rw
      restart: always
      privileged: true
      networks:
        - diy-network

  ### Mysql container #########################################

  mysql:
      image: mysql:5.7
      ports:
        - "${MYSQL_PORT}:3306"
      volumes:
        - ./components/mysql/data:/var/lib/mysql:rw
        - ./components/mysql/config/mysql.cnf:/etc/mysql/conf.d/mysql.cnf:ro
        - ./components/mysql/log:/var/log/mysql:rw
      restart: always
      privileged: true
      environment:
        MYSQL_ROOT_PASSWORD: ${MYSQL_PASSWORD}
      networks:
        diy-network:
          ipv4_address: ${MYSQL_SERVICE_IP}

  ### Redis container #########################################

  redis:
      image: redis:latest
      ports:
        - "${REDIS_PORT}:6379"
      command: redis-server /usr/local/etc/redis/redis.conf
      volumes:
        - ./components/redis/config/redis.conf:/usr/local/etc/redis/redis.conf:rw
        - ./components/redis/log:/var/log/redis:rw
        - ./components/redis/data:/data:rw
      restart: always
      privileged: true
      networks:
        diy-network:
          ipv4_address: ${REDIS_SERVICE_IP}

  ### MongoDB container #########################################

  mongodb:
    image: mongo:latest
    ports:
      - "${MONGODB_PORT}:27017"
    volumes:
      - ./components/mongodb/data:/data/db:rw
    restart: always
    privileged: true
    networks:
        diy-network:
            ipv4_address: ${MONGODB_SERVICE_IP}

networks:
  diy-network:
      driver: bridge
      ipam:
         config:
         - subnet: ${GLOBAL_NETWORK_SUBNET}